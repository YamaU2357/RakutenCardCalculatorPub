---
AWSTemplateFormatVersion: 2010-09-09

Parameters:
  RakutenCardCalculatorCICDStackName:
    Type: String
    Default: RakutenCardCalculatorCICD
  HostedZoneName:
    Description: Hosted zone name (domain name).
    Type: String
  HostedZoneId:
    Description: Hosted Zone id.
    Type: String
  AcmCertificateArn:
    Type: String
    Description: Acm Arn (us-east-1)
Resources:
  AssetsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !ImportValue
        'Fn::Sub': '${RakutenCardCalculatorCICDStackName}-DeployS3Bucket'
      PolicyDocument:
        Statement:
        - Action: s3:GetObject
          Effect: Allow
          Resource: !Sub 
            - '${S3BucketArn}/*'
            - S3BucketArn:
                Fn::ImportValue:
                  !Sub '${RakutenCardCalculatorCICDStackName}-DeployS3BucketArn'
          Principal:
            Service: cloudfront.amazonaws.com
          Condition:
            StringEquals:
              AWS:SourceArn: !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/${CloudFrontDistribution}
  S3CachePolicy:
    Type: AWS::CloudFront::CachePolicy
    Properties: 
      CachePolicyConfig:
        DefaultTTL: 3600
        MaxTTL: 86400
        MinTTL: 0
        Name: !Sub '${AWS::StackName}-cache-policy'
        ParametersInCacheKeyAndForwardedToOrigin: 
          EnableAcceptEncodingGzip: true
          CookiesConfig: 
            CookieBehavior: none
          HeadersConfig: 
            HeaderBehavior: none
          QueryStringsConfig: 
            QueryStringBehavior: none
  S3RequestPolicy:
    Type: AWS::CloudFront::OriginRequestPolicy
    Properties: 
      OriginRequestPolicyConfig:
        Name: !Sub '${AWS::StackName}-request-policy'
        CookiesConfig: 
          CookieBehavior: none
        HeadersConfig: 
          HeaderBehavior: none
        QueryStringsConfig: 
          QueryStringBehavior: none

  Route53RecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      Name: !Ref HostedZoneName
      Type: A
      AliasTarget:
        DNSName: !GetAtt CloudFrontDistribution.DomainName
        HostedZoneId: Z2FDTNDATAQYW2 # Fixed Value
      HostedZoneId: !Ref HostedZoneId

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Comment: !Sub '${AWS::StackName} CloudFront'
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: '/'
        IPV6Enabled: true
        PriceClass: 'PriceClass_200'
        DefaultCacheBehavior:
          TargetOriginId: S3Origin
          AllowedMethods: [HEAD, DELETE, POST, GET, OPTIONS, PUT, PATCH]
          CachedMethods: [HEAD, GET]
          CachePolicyId: !Ref S3CachePolicy
          OriginRequestPolicyId: !Ref S3RequestPolicy
          Compress: true
          ViewerProtocolPolicy: 'allow-all'
        CacheBehaviors: []
        Aliases:
          - !Ref HostedZoneName
        ViewerCertificate: 
          AcmCertificateArn: !Ref AcmCertificateArn
          SslSupportMethod: sni-only
        Origins:
        - Id: S3Origin
          DomainName: !ImportValue
            'Fn::Sub': '${RakutenCardCalculatorCICDStackName}-DeployS3BucketDomainName'
          S3OriginConfig:
            OriginAccessIdentity: ''
          OriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id
        CustomErrorResponses:
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: '/index.html'
            ErrorCachingMinTTL: 180
  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties: 
      OriginAccessControlConfig: 
        Description: Access S3 Bucket
        Name: OriginBucketOAC
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4
Outputs:
  AliaseDomainName:
    Value: !Ref HostedZoneName
    Export:
      Name: !Sub "${AWS::StackName}-AliaseDomainName"